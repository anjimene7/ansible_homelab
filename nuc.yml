---
- hosts: all
  become: true
  vars:
    username: anjimene

  tasks:
    # UPGRADE AND INSTALL REQUIRED UBUNTU PACKAGES
    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=3600

    - name: Upgrade all apt packages
      apt: upgrade=dist

    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Update apt and install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - git
          - lm-sensors
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Create portainer_agent container
      docker_container:
        name: portainer_agent
        image: portainer/agent:latest
        state: started
        recreate: yes
        restart_policy: always
        published_ports:
          - "9001:9001"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/lib/docker/volumes:/var/lib/docker/volumes

    - name: Create credential file (used for fstab entry)
      copy:
        content: |
          username=USER
          password=PASSWORD
        dest: /home/"{{ username }}"/.credential
        mode: 0600
      become: true
      become_user: "{{ username }}"

    - name: Create fstab entry for product image folder share
      mount:
        state: present
        fstype: cifs
        opts: "credentials=/home/{{ username }}/.credential,file_mode=0755,dir_mode=0755,user"
        src="//network_path/folder"
        path="/local_path/folder"
      become: true

    - name: Mount product image folder share
      shell: |
        mount "/local_path/folder"
      become: true
      become_user: myusername