---
- name: Setup new Ubuntu Home Server
  hosts: all
  become: true
  vars:
    username: anjimene
    docker_group: docker
    nas_mounts:
      - src: "//192.168.1.126/Data_Storage/Data"
        dst: /media/data_storage
        fstype: cifs
        opts: "gid=1000,vers=3.0,credentials=/root/.smbcredentials"
      - src: "//192.168.1.126/home"
        dst: /media/anjimene
        fstype: cifs
        opts: "gid=1000,vers=3.0,credentials=/root/.smbcredentials"
      - src: "//192.168.1.126/volume1/apps"
        dst: /media/apps
        fstype: cifs
        opts: "gid=1000,vers=3.0,credentials=/root/.smbcredentials"

  tasks:
    # UPGRADE AND INSTALL REQUIRED UBUNTU PACKAGES
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes

    - name: Upgrade all apt packages
      become: true
      apt:
        upgrade: dist

    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Update apt and install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - git
          - lm-sensors
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Create portainer_agent container
      docker_container:
        name: portainer_agent
        image: portainer/agent:latest
        state: started
        recreate: yes
        restart_policy: always
        published_ports:
          - "9001:9001"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/lib/docker/volumes:/var/lib/docker/volumes

    # sudo groupadd docker
    - name: Create "docker" group
      group:
        name: "{{ docker_group }}"
        state: present

    # sudo usermod -aG docker root
    - name: Add user to "docker" group
      user:
        name: "{{ username }}"
        groups: "{{ docker_group }}"
        append: yes

    - name: Create credential file (used for fstab entry)
      copy:
        content: |
          username="{{ username }}"
          password="{{ PWD_SMB_CREDENTIALS }}"
        dest: /root/.smbcredentials
        mode: 0600
      become: true

    - name: create directory if they don't exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - /media/data_storage
        - /media/anjimene
        - /media/apps

    - name: Add mount to /etc/fstab
      lineinfile:
        path: '/etc/fstab'
        line: "{{ item.src }} {{ item.dst }} {{ item.fstype }} {{ item.opts }}"
      loop: "{{ nas_mounts }}"

    - name: mount all
      command: mount -a
      become: true